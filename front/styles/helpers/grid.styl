/*
// scss-lint:disable SingleLinePerProperty
// scss-lint:disable SpaceBeforeBrace
// scss-lint:disable ExtendDirective

// Framework grid generation
// 
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.
*/
/* stylelint-disable stylus/declaration-colon */
make-grid-columns($columns = $grid-columns, $gutter = $grid-gutter-width, $breakpoints = $grid-breakpoints)
    // Common properties for all breakpoints
    .grid-column
        position relative
        padding-right: ($gutter / 2)
        padding-left: ($gutter / 2)
        width 100%
        min-height 1px // Prevent columns from collapsing when empty

    for $breakpoint in keys($breakpoints)
        $infix = breakpoint-infix($breakpoint, $breakpoints)

        // Allow columns to stretch full width below their breakpoints
        for $i in 1 .. $columns
            .col{$infix}-{$i}
                @extend .grid-column

        .col{$infix}, .col{$infix}-auto
            @extend .grid-column

        +media-breakpoint-up($breakpoint, $breakpoints)
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            .col{$infix}
                max-width 100%
                flex-basis 0%
                flex-grow 1

            .col{$infix}-auto
                width auto
                max-width none // Reset earlier grid tiers
                flex 0 0 auto

            for $i in 1 .. $columns
                .col{$infix}-{$i}
                    make-col($i, $columns)

                if ($i < 5)
                    .col{$infix}-offset-{$i}
                        make-col-offset($i, $columns)

            for $i in 1 .. $columns
                .order{$infix}-{$i}
                    order $i

make-container()
    margin-right auto
    margin-left auto
    padding-right: ($grid-gutter-width / 2)
    padding-left: ($grid-gutter-width / 2)
    width 100%

// For each breakpoint, define the maximum width of the container in a media query
make-container-max-widths($max-widths = $container-max-widths, $breakpoints = $grid-breakpoints)
    for $breakpoint, $container-max-width in $max-widths
        +media-breakpoint-up($breakpoint, $breakpoints)
            max-width $container-max-width

make-row()
    margin-right: ($grid-gutter-width / -2)
    margin-left: ($grid-gutter-width / -2)
    display flex
    flex-wrap wrap

make-col-ready()
    position relative
    padding-right: ($grid-gutter-width / 2)
    padding-left: ($grid-gutter-width / 2)
    // Prevent columns from becoming too narrow when at smaller grid tiers by
    // always setting `width: 100%;`. This works because we use `flex` values
    // later on to override this initial width.
    width 100%
    min-height 1px // Prevent collapsing

make-col($size, $columns = $grid-columns)
    // Add a `max-width` to ensure content within each column does not blow out
    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
    // do not appear to require this.
    max-width percentage(($size / $columns))
    flex 0 0 percentage(($size / $columns))

make-col-offset($size, $columns = $grid-columns)
    margin-left percentage(($size / $columns))

// Container widths
// 
// Set the container width, and override it for fixed navbars in media queries.
if ($enable-grid-classes)
    .container
        make-container()
        make-container-max-widths()

// Fluid container
// 
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.
if ($enable-grid-classes)
    .container-fluid
        // width 100%
        make-container()

// Row
// 
// Rows contain and clear the floats of your columns.
if ($enable-grid-classes)
    .row
        make-row()

    // Remove the negative margin from default .row, then the horizontal padding
    // from all immediate children columns (to prevent runaway style inheritance).
    .no-gutters
        margin-right 0
        margin-left 0

        > .col, > [class*='col-']
            padding-right 0
            padding-left 0

if ($enable-grid-classes)
    make-grid-columns()
